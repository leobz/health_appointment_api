---
openapi: 3.0.3
info:
  title: Health Appointment API
  version: 1.0.0
servers:
- url: http://localhost:3000
paths:
  "/api/v1/appointments":
    post:
      summary: create
      tags:
      - Appointments
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                doctor_id:
                  type: integer
                patient_id:
                  type: integer
                start_time:
                  type: string
              required:
              - doctor_id
              - patient_id
              - start_time
            example:
              doctor_id: 1
              patient_id: 1
              start_time: '2024-01-01T15:00:00.000+00:00'
      responses:
        '201':
          description: creates a new appointment
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  doctor_id:
                    type: integer
                  patient_id:
                    type: integer
                  start_time:
                    type: string
                required:
                - id
                - doctor_id
                - patient_id
                - start_time
              example:
                id: 1
                doctor_id: 1
                patient_id: 1
                start_time: '2024-01-01T15:00:00Z'
  "/api/v1/appointments/{id}":
    delete:
      summary: destroy
      tags:
      - Appointments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      responses:
        '204':
          description: deletes an appointment
    put:
      summary: update
      tags:
      - Appointments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                doctor_id:
                  type: integer
                patient_id:
                  type: integer
                start_time:
                  type: string
              required:
              - doctor_id
              - patient_id
              - start_time
            example:
              doctor_id: 1
              patient_id: 1
              start_time: '2024-01-08T16:00:00.000+00:00'
      responses:
        '200':
          description: updates an appointment
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  doctor_id:
                    type: integer
                  patient_id:
                    type: integer
                  start_time:
                    type: string
                required:
                - id
                - doctor_id
                - patient_id
                - start_time
              example:
                id: 1
                doctor_id: 1
                patient_id: 1
                start_time: '2024-01-08T16:00:00Z'
  "/api/v1/doctors":
    get:
      summary: index
      tags:
      - Doctors
      responses:
        '200':
          description: returns a list of doctors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                    time_slot_per_client_in_min:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  required:
                  - id
                  - first_name
                  - last_name
                  - time_slot_per_client_in_min
                  - created_at
                  - updated_at
              example:
              - id: 1
                first_name: John
                last_name: Doe
                time_slot_per_client_in_min: 60
                created_at: '2024-06-12T04:19:37.503Z'
                updated_at: '2024-06-12T04:19:37.503Z'
              - id: 2
                first_name: John
                last_name: Doe
                time_slot_per_client_in_min: 60
                created_at: '2024-06-12T04:19:37.503Z'
                updated_at: '2024-06-12T04:19:37.503Z'
              - id: 3
                first_name: John
                last_name: Doe
                time_slot_per_client_in_min: 60
                created_at: '2024-06-12T04:19:37.504Z'
                updated_at: '2024-06-12T04:19:37.504Z'
              - id: 4
                first_name: John
                last_name: Doe
                time_slot_per_client_in_min: 60
                created_at: '2024-06-12T04:19:37.505Z'
                updated_at: '2024-06-12T04:19:37.505Z'
              - id: 5
                first_name: John
                last_name: Doe
                time_slot_per_client_in_min: 60
                created_at: '2024-06-12T04:19:37.505Z'
                updated_at: '2024-06-12T04:19:37.505Z'
              - id: 6
                first_name: John
                last_name: Doe
                time_slot_per_client_in_min: 60
                created_at: '2024-06-12T04:19:37.506Z'
                updated_at: '2024-06-12T04:19:37.506Z'
              - id: 7
                first_name: John
                last_name: Doe
                time_slot_per_client_in_min: 60
                created_at: '2024-06-12T04:19:37.506Z'
                updated_at: '2024-06-12T04:19:37.506Z'
              - id: 8
                first_name: John
                last_name: Doe
                time_slot_per_client_in_min: 60
                created_at: '2024-06-12T04:19:37.507Z'
                updated_at: '2024-06-12T04:19:37.507Z'
              - id: 9
                first_name: John
                last_name: Doe
                time_slot_per_client_in_min: 60
                created_at: '2024-06-12T04:19:37.507Z'
                updated_at: '2024-06-12T04:19:37.507Z'
              - id: 10
                first_name: John
                last_name: Doe
                time_slot_per_client_in_min: 60
                created_at: '2024-06-12T04:19:37.508Z'
                updated_at: '2024-06-12T04:19:37.508Z'
    post:
      summary: create
      tags:
      - Doctors
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                time_slot_per_client_in_min:
                  type: string
              required:
              - first_name
              - last_name
              - time_slot_per_client_in_min
            example:
              first_name: John
              last_name: Doe
              time_slot_per_client_in_min: '15'
      responses:
        '201':
          description: 'Valid Request: creates a doctor'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type: string
                  last_name:
                    type: string
                  time_slot_per_client_in_min:
                    type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - id
                - first_name
                - last_name
                - time_slot_per_client_in_min
                - created_at
                - updated_at
              example:
                id: 11
                first_name: John
                last_name: Doe
                time_slot_per_client_in_min: 15
                created_at: '2024-06-12T04:19:37.532Z'
                updated_at: '2024-06-12T04:19:37.532Z'
        '422':
          description: 'Invalid Request: returns status code 422'
          content:
            application/json:
              schema:
                type: object
                properties:
                  last_name:
                    type: array
                    items:
                      type: string
                  time_slot_per_client_in_min:
                    type: array
                    items:
                      type: string
                required:
                - last_name
                - time_slot_per_client_in_min
              example:
                last_name:
                - can't be blank
                time_slot_per_client_in_min:
                - can't be blank
  "/api/v1/doctors/{doctor_id}/availabilities":
    get:
      summary: index
      tags:
      - Availabilities
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      - name: end_date
        in: query
        required: false
        schema:
          type: string
        example: '2024-06-10'
      - name: start_date
        in: query
        required: false
        schema:
          type: string
        example: '2024-06-03'
      responses:
        '200':
          description: returns a list of availabilities
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    time_slots:
                      type: array
                      items:
                        type: object
                        properties:
                          start_time:
                            type: string
                        required:
                        - start_time
                  required:
                  - date
                  - time_slots
              example:
              - date: '2024-06-03'
                time_slots:
                - start_time: '2024-06-03T11:00:00-03:00'
              - date: '2024-06-05'
                time_slots:
                - start_time: '2024-06-05T10:00:00-03:00'
                - start_time: '2024-06-05T11:00:00-03:00'
              - date: '2024-06-10'
                time_slots:
                - start_time: '2024-06-10T10:00:00-03:00'
                - start_time: '2024-06-10T11:00:00-03:00'
  "/api/v1/doctors/{doctor_id}/working_hours":
    get:
      summary: index
      tags:
      - WorkingHours
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      responses:
        '200':
          description: returns a list of working hours
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    day:
                      type: string
                    end_time:
                      type: string
                    start_time:
                      type: string
                    day_of_week:
                      type: string
                    id:
                      type: integer
                  required:
                  - end_time
                  - start_time
              example:
              - id: 1
                day_of_week: monday
                end_time: '17:00'
                start_time: '09:00'
              - id: 2
                day_of_week: friday
                end_time: '17:00'
                start_time: '09:00'
    post:
      summary: create
      tags:
      - WorkingHours
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                doctor_id:
                  type: string
                day_of_week:
                  type: string
                start_time:
                  type: string
                end_time:
                  type: string
              required:
              - doctor_id
              - day_of_week
              - start_time
              - end_time
            example:
              doctor_id: '1'
              day_of_week: saturday
              start_time: '09:00'
              end_time: '10:00'
      responses:
        '201':
          description: 'Valid Request: creates a working_hour'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  day_of_week:
                    type: string
                  start_time:
                    type: string
                  end_time:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  doctor_id:
                    type: integer
                required:
                - id
                - day_of_week
                - start_time
                - end_time
                - created_at
                - updated_at
                - doctor_id
              example:
                id: 3
                day_of_week: saturday
                start_time: '2000-01-01T09:00:00.000Z'
                end_time: '2000-01-01T10:00:00.000Z'
                created_at: '2024-06-12T04:19:37.484Z'
                updated_at: '2024-06-12T04:19:37.484Z'
                doctor_id: 1
        '422':
          description: 'Invalid Request: returns status code 422'
          content:
            application/json:
              schema:
                type: object
                properties:
                  day_of_week:
                    type: array
                    items:
                      type: string
                  start_time:
                    type: array
                    items:
                      type: string
                  end_time:
                    type: array
                    items:
                      type: string
                required:
                - day_of_week
                - start_time
                - end_time
              example:
                day_of_week:
                - can't be blank
                start_time:
                - can't be blank
                - must be before end_time
                end_time:
                - can't be blank
  "/api/v1/doctors/{doctor_id}/working_hours/{id}":
    delete:
      summary: destroy
      tags:
      - WorkingHours
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      responses:
        '204':
          description: returns status code 204
    get:
      summary: show
      tags:
      - WorkingHours
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 100
      responses:
        '200':
          description: returns the working_hour if record exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  day_of_week:
                    type: string
                  start_time:
                    type: string
                  end_time:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  doctor_id:
                    type: integer
                required:
                - id
                - day_of_week
                - start_time
                - end_time
                - created_at
                - updated_at
                - doctor_id
              example:
                id: 1
                day_of_week: monday
                start_time: '2000-01-01T09:00:00.000Z'
                end_time: '2000-01-01T17:00:00.000Z'
                created_at: '2024-06-12T04:19:37.469Z'
                updated_at: '2024-06-12T04:19:37.469Z'
                doctor_id: 1
        '404':
          description: returns status code 404 if record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Couldn't find WorkingHour
    put:
      summary: update
      tags:
      - WorkingHours
      parameters:
      - name: doctor_id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                start_time:
                  type: string
              required:
              - start_time
            example:
              start_time: '05:00'
      responses:
        '200':
          description: updates the record
          content:
            application/json:
              schema:
                type: object
                properties:
                  start_time:
                    type: string
                  doctor_id:
                    type: integer
                  id:
                    type: integer
                  day_of_week:
                    type: string
                  end_time:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - start_time
                - doctor_id
                - id
                - day_of_week
                - end_time
                - created_at
                - updated_at
              example:
                start_time: '2000-01-01T05:00:00.000Z'
                doctor_id: 1
                id: 1
                day_of_week: monday
                end_time: '2000-01-01T17:00:00.000Z'
                created_at: '2024-06-12T04:19:37.493Z'
                updated_at: '2024-06-12T04:19:37.496Z'
  "/api/v1/doctors/{id}":
    delete:
      summary: destroy
      tags:
      - Doctors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      responses:
        '204':
          description: returns status code 204
    get:
      summary: show
      tags:
      - Doctors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 100
      responses:
        '200':
          description: returns the doctor if record exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type: string
                  last_name:
                    type: string
                  time_slot_per_client_in_min:
                    type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - id
                - first_name
                - last_name
                - time_slot_per_client_in_min
                - created_at
                - updated_at
              example:
                id: 1
                first_name: John
                last_name: Doe
                time_slot_per_client_in_min: 60
                created_at: '2024-06-12T04:19:37.513Z'
                updated_at: '2024-06-12T04:19:37.513Z'
        '404':
          description: returns status code 404 if record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Couldn't find Doctor
    put:
      summary: update
      tags:
      - Doctors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                first_name:
                  type: string
              required:
              - first_name
            example:
              first_name: Jane
      responses:
        '200':
          description: updates the record
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string
                  id:
                    type: integer
                  last_name:
                    type: string
                  time_slot_per_client_in_min:
                    type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - first_name
                - id
                - last_name
                - time_slot_per_client_in_min
                - created_at
                - updated_at
              example:
                first_name: Jane
                id: 1
                last_name: Doe
                time_slot_per_client_in_min: 60
                created_at: '2024-06-12T04:19:37.550Z'
                updated_at: '2024-06-12T04:19:37.556Z'
  "/api/v1/patients":
    get:
      summary: index
      tags:
      - Patients
      responses:
        '200':
          description: returns a list of patients
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  required:
                  - id
                  - first_name
                  - last_name
                  - created_at
                  - updated_at
              example:
              - id: 1
                first_name: John
                last_name: Doe
                created_at: '2024-06-12T04:19:37.565Z'
                updated_at: '2024-06-12T04:19:37.565Z'
              - id: 2
                first_name: John
                last_name: Doe
                created_at: '2024-06-12T04:19:37.566Z'
                updated_at: '2024-06-12T04:19:37.566Z'
              - id: 3
                first_name: John
                last_name: Doe
                created_at: '2024-06-12T04:19:37.566Z'
                updated_at: '2024-06-12T04:19:37.566Z'
              - id: 4
                first_name: John
                last_name: Doe
                created_at: '2024-06-12T04:19:37.567Z'
                updated_at: '2024-06-12T04:19:37.567Z'
              - id: 5
                first_name: John
                last_name: Doe
                created_at: '2024-06-12T04:19:37.568Z'
                updated_at: '2024-06-12T04:19:37.568Z'
              - id: 6
                first_name: John
                last_name: Doe
                created_at: '2024-06-12T04:19:37.568Z'
                updated_at: '2024-06-12T04:19:37.568Z'
              - id: 7
                first_name: John
                last_name: Doe
                created_at: '2024-06-12T04:19:37.569Z'
                updated_at: '2024-06-12T04:19:37.569Z'
              - id: 8
                first_name: John
                last_name: Doe
                created_at: '2024-06-12T04:19:37.569Z'
                updated_at: '2024-06-12T04:19:37.569Z'
              - id: 9
                first_name: John
                last_name: Doe
                created_at: '2024-06-12T04:19:37.570Z'
                updated_at: '2024-06-12T04:19:37.570Z'
              - id: 10
                first_name: John
                last_name: Doe
                created_at: '2024-06-12T04:19:37.570Z'
                updated_at: '2024-06-12T04:19:37.570Z'
    post:
      summary: create
      tags:
      - Patients
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
              required:
              - first_name
              - last_name
            example:
              first_name: John
              last_name: Doe
      responses:
        '201':
          description: 'Valid Request: creates a patient'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type: string
                  last_name:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - id
                - first_name
                - last_name
                - created_at
                - updated_at
              example:
                id: 11
                first_name: John
                last_name: Doe
                created_at: '2024-06-12T04:19:37.595Z'
                updated_at: '2024-06-12T04:19:37.595Z'
        '422':
          description: 'Invalid Request: returns status code 422'
          content:
            application/json:
              schema:
                type: object
                properties:
                  last_name:
                    type: array
                    items:
                      type: string
                required:
                - last_name
              example:
                last_name:
                - can't be blank
  "/api/v1/patients/{id}":
    delete:
      summary: destroy
      tags:
      - Patients
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      responses:
        '204':
          description: returns status code 204
    get:
      summary: show
      tags:
      - Patients
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 100
      responses:
        '200':
          description: returns the patient if record exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type: string
                  last_name:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - id
                - first_name
                - last_name
                - created_at
                - updated_at
              example:
                id: 1
                first_name: John
                last_name: Doe
                created_at: '2024-06-12T04:19:37.576Z'
                updated_at: '2024-06-12T04:19:37.576Z'
        '404':
          description: returns status code 404 if record does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Couldn't find Patient
    put:
      summary: update
      tags:
      - Patients
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                first_name:
                  type: string
              required:
              - first_name
            example:
              first_name: Jane
      responses:
        '200':
          description: updates the record
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string
                  id:
                    type: integer
                  last_name:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                required:
                - first_name
                - id
                - last_name
                - created_at
                - updated_at
              example:
                first_name: Jane
                id: 1
                last_name: Doe
                created_at: '2024-06-12T04:19:37.605Z'
                updated_at: '2024-06-12T04:19:37.611Z'
